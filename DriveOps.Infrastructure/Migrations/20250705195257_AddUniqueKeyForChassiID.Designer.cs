// <auto-generated />
using DriveOps.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DriveOps.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250705195257_AddUniqueKeyForChassiID")]
    partial class AddUniqueKeyForChassiID
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DriveOps.Models.Vehicle", b =>
                {
                    b.Property<string>("ChassisSeries")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("ChassisNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPassengers")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ChassisSeries", "ChassisNumber");

                    b.HasIndex("ChassisSeries", "ChassisNumber")
                        .IsUnique();

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<int>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DriveOps.Models.Bus", b =>
                {
                    b.HasBaseType("DriveOps.Models.Vehicle");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("DriveOps.Models.Car", b =>
                {
                    b.HasBaseType("DriveOps.Models.Vehicle");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("DriveOps.Models.Truck", b =>
                {
                    b.HasBaseType("DriveOps.Models.Vehicle");

                    b.HasDiscriminator().HasValue(1);
                });
#pragma warning restore 612, 618
        }
    }
}
